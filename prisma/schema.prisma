// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String?
  about       String
  friends     Friend[]
  friendRequests     FriendRequest[]
  role        Role?     @default(registered)
  comments    Comment[]
}

model Friend {
  id          Int       @id @default(autoincrement())
  username    String
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique
}

model FriendRequest {
  id          Int       @id @default(autoincrement())
  requester   String       
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique
}

model ActiveUsers {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  lastActive  DateTime  @default(now())
}

model Comment {
  id          Int       @id @default(autoincrement())
  text        String   
  at          String 
  author      User      @relation(fields: [authorId], references: [id])
  authorId    Int
  edited      Boolean   @default(false)
}

enum Role {
  registered
  administrator
  banned
}

model Forum {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String    
  thread      Thread[]
}

model Thread {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String    
  author      String  
  forum       Forum      @relation(fields: [forumId], references: [id])
  forumId     Int
  threadComments ThreadComment[]
}

model ThreadComment {
  id          Int       @id @default(autoincrement())
  text        String    
  author      String  
  thread      Thread      @relation(fields: [threadId], references: [id])
  threadId    Int     
}